---
- name: Create and Configure Frontend IP
  block:
  - name: Check frontend exist
    shell: "if az network lb frontend-ip show -g {{item.rg_name}} --lb-name {{item.lb_name}} -n {{ item.frontend_name }} --query name >> /dev/null; then echo 'found';else echo 'not-found';fi;"
    register: lb_result
    loop: "{{ load_balancers }}"
    loop_control:
      index_var: cnt
    when: "'Exist' == get_lb_name.results[cnt].stdout"

  - name: Get frotnend  config details
    shell: "az network lb frontend-ip show -g {{item.rg_name}} --lb-name {{item.lb_name}} -n {{ item.frontend_name }}"
    register: fip_info
    loop: "{{ load_balancers }}"
    loop_control:
      index_var: cnt
    when: "'Exist' == get_lb_name.results[cnt].stdout"

  - name: Assign frontend IP value
    set_fact:
      fip_ip_address: "{% if 'found' == lb_result.results[cnt].stdout %}
                       {{ fip_info.results[cnt].stdout | from_json | json_query('privateIPAddress') }}
                       {% endif %}"
    loop: "{{ load_balancers }}"
    loop_control:
      index_var: cnt
    when: "'Exist' == get_lb_name.results[cnt].stdout"

  - name: Create and Configure load balancer frontend IP
    shell: "az network lb frontend-ip create --lb-name {{ item.lb_name }}
            --resource-group {{ item.rg_name }}
            --name {{ item.frontend_name }}
            --private-ip-address {{ item.private_ip_addr }}
            --zone {{ item.availability_zone }}
            --vnet-name {{ item.vnet_name }}
            --subnet {{ item.subnet_name }}"
    register: create_fip_status
    loop: "{{ load_balancers }}"
    loop_control:
      label: "Frontend Name: {{ get_lb_name.results[cnt].item.frontend_name }}"
      index_var: cnt
    changed_when: 'fip_ip_address != item.private_ip_addr'
    #changed_when: "'Not-Exist' in  get_lb_name.results[cnt].stdout or 'not-found' in lb_result.results[cnt].stdout or fip_ip_address != item.private_ip_addr"
   
  - name: Print
    debug:
      msg: "{{ create_fip_status }}"

  - name: Delete the deafult frontend IP
    shell: "az network lb frontend-ip delete
            --lb-name {{ item.lb_name }}
            --resource-group {{ item.rg_name }}
            --name {{ item.default_fip_name }}"
    register: delete_default_fip_status
    loop: "{{ load_balancers }}"
    loop_control:
      label: "Deafult frontend name: {{ create_fip_status.results[cnt].item.default_fip_name }}"
      index_var: cnt
    changed_when: "'Not-Exist' in get_lb_name.results[cnt].stdout"

  - name: Check default frontend IP deleted or not
    debug:
      msg: "{% if item.changed %} Load balancer default frontend IP deleted successfully \
            {% else %} Load balancer default frontend IP was not found because its existing frontend {% endif %}"
    loop: "{{ delete_default_fip_status.results }}"
    loop_control:
      label: "Frontend default name: {{ delete_default_fip_status.results[cnt].item.default_fip_name }} "
      index_var: cnt

  rescue:
  - fail:
     msg: "Error while executing create frontend IP Azure CLI command"
